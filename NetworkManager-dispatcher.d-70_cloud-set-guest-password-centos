#!/bin/bash
#
# cloud-set-guest-password   Init file for Password Download Client
#
# description: Init file for Password Download Client
#
# install to /etc/NetworkManager/dispatcher.d/

prog=$(basename $0)

# Modify this line to specify the user (default is root)
user=root

function cloud_set_guest_password() {
    # find dhcp lease file
    interface=$1
    connection_uuid=$2
    dhcp_dirs=$(ls -d /var/lib/dhclient /var/lib/dhcp /var/lib/NetworkManager 2>/dev/null)
    filename="dhclient-${connection_uuid}-${interface}.lease"
    dhcp_files=$(find $dhcp_dirs -name $filename)
    if [ -z "$dhcp_files" ]; then
	    echo "$prog: Cloud not find $filename"
	    return 1
    fi
    DHCP_FILE=$(ls -t $dhcp_files|head -1)

    # find password server ip
    PASSWORD_SERVER_IP=$(grep dhcp-server-identifier $DHCP_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')
    if [ -z "${PASSWORD_SERVER_IP}" ]; then
        echo "$prog: Could not find password server IP in $DHCP_FILE"
	return 1
    fi

    # request new password
    echo "$prog: Found password server IP $PASSWORD_SERVER_IP in $DHCP_FILE"
    echo "$prog: Sending request to password server at $PASSWORD_SERVER_IP"
    password=$(wget -q -t 3 -T 20 -O - --header "DomU_Request: send_my_password" $PASSWORD_SERVER_IP:8080 2>/dev/null)
    if [ $? -ne 0 ]; then
	echo "$prog: Failed to send request to password server at $PASSWORD_SERVER_IP"
	return 1
    fi

    # check password string
    password_received=0
    error_occured=0
    password=$(echo $password | tr -d '\r')
    echo "$prog: Got response from server at $PASSWORD_SERVER_IP"
    case "$password" in
        "")
            echo "$prog: Password server at $PASSWORD_SERVER_IP did not have any password for the VM"
            password_received=0
            ;;
                    
        "bad_request")
            echo "$prog: VM sent an invalid request to password server at $PASSWORD_SERVER_IP"
            error_occured=1
            ;;
                                        
        "saved_password")
            echo "$prog: VM has already saved a password from the password server at $PASSWORD_SERVER_IP"
            password_received=0
            ;;
                                        
        *)
            echo "$prog: VM got a valid password from server at $PASSWORD_SERVER_IP"
            password_received=1
            ;;
    esac
    if [ $error_occured -eq 1 ]; then
        echo "$prog: Failed to get password from server"
        return 1
    fi
    if [ $password_received -eq 0 ]; then
        echo "$prog: Did not need to change password."
        return 0
    fi

    # change password
    echo "$prog: Changing password ..."
    echo $password | passwd --stdin $user > /dev/null
    if [ $? -ne 0 ]; then
        echo "$prog: Failed to change password for user $user"
	return 1
    fi
    echo "$prog: Successfully changed password for user $user"

    # send ack to password server
    echo "$prog: Sending acknowledgment to password server at $PASSWORD_SERVER_IP"
    wget -t 3 -T 20 -O /dev/null --header "DomU_Request: saved_password" $PASSWORD_SERVER_IP:8080 2&1 > /dev/null
    if [ $? -ne 0 ]; then
        echo "$prog: Failed to send ack to password server at $PASSWORD_SERVER_IP"
	return 1
    fi

    echo "$prog: Successfully sending acknowledgment to password server"
    return 0
}

interface=$1
action=$2

case "$action" in
    up)
	cloud_set_guest_password ${interface} ${CONNECTION_UUID}
	if [ $? -ne 0 ]; then
	    exit 1
        fi
	;;
esac

